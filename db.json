{"meta":{"version":1,"warehouse":"1.0.3"},"models":{"Asset":[{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1}],"Cache":[{"_id":"source/_posts/apiv1-release.md","shasum":"d2c18d10e9b8b8d941cc27d3209aa676f7121117","modified":1456979073000},{"_id":"source/_posts/linux-pptpd-to-toughradius.md","shasum":"1e091dd03bf7ecbcb05271e98575069ed7751f37","modified":1445221741000},{"_id":"source/_posts/intro.md","shasum":"4074985b83292f16b56ef2294d24a8654e0fe1b4","modified":1444206518000},{"_id":"source/_posts/docker-mysql-create.md","shasum":"e7fea45ae01daa194251319848e6b4eb6d05cd7f","modified":1454526330000},{"_id":"source/_posts/toughradius-native-install-video.md","shasum":"761cbfd658b8165f8f02816ffe218a55ef555e2c","modified":1461807533000},{"_id":"source/_posts/toughmysql-v0-0-1.md","shasum":"aae51d449e899d4ef5eca84f2438ed4c4e1ac389","modified":1454524905000},{"_id":"source/_posts/ver1202.md","shasum":"33eef94dea4c8094c1bc660f29b1054f80879357","modified":1445066894000},{"_id":"source/_posts/ver1201.md","shasum":"99cb9fab01f750c6d0802633514dea05dfbabfa8","modified":1444892281000},{"_id":"source/_posts/ver205.md","shasum":"8751db47ebec1c5a55b4fa7e154066ea26228265","modified":1457510136000},{"_id":"source/_posts/ver202.md","shasum":"72f354a51e5f17d71866f2453f9597e8504cab46","modified":1455864975000},{"_id":"source/_posts/mschapv2.md","shasum":"45d2019d53361f2321e2d9726aaa678ee455c86b","modified":1445013994000},{"_id":"source/aboutus/index.md","shasum":"0d5c273501dda27892a4b3beba262c89f3575535","modified":1455865127000},{"_id":"source/_posts/ver210.md","shasum":"d358a7082179f8787671653ea85a69a8eb550a36","modified":1461680862000},{"_id":"themes/landscape/Gruntfile.js","shasum":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1444206518000},{"_id":"themes/landscape/README.md","shasum":"c7e83cfe8f2c724fc9cac32bd71bb5faf9ceeddb","modified":1444206518000},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","shasum":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1444206518000},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","shasum":"c22cce4a6a2dd353e7f6b1249518841e943c8e3b","modified":1444209644000},{"_id":"themes/landscape/_config.yml","shasum":"43fab208b6a505358e59f096ec1b59501220a0cc","modified":1444211618000},{"_id":"themes/landscape/LICENSE","shasum":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1444206518000},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","shasum":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1444206518000},{"_id":"themes/landscape/layout/_partial/footer.ejs","shasum":"4b19c1080c9e6c2acd922a88ed29d183a3b5bc09","modified":1444206518000},{"_id":"themes/landscape/layout/_partial/head.ejs","shasum":"a44f3cf5dc8910005cda9045bfaf2417e10b473b","modified":1444209702000},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","shasum":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1444206518000},{"_id":"themes/landscape/layout/_partial/post/category.ejs","shasum":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1444206518000},{"_id":"themes/landscape/layout/_partial/header.ejs","shasum":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1444206518000},{"_id":"themes/landscape/layout/_partial/post/date.ejs","shasum":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1444206518000},{"_id":"themes/landscape/layout/_partial/archive.ejs","shasum":"d7de6421497ffaf65e4f5fe4bed71fcea51fde80","modified":1444206518000},{"_id":"themes/landscape/layout/_partial/article.ejs","shasum":"01201725258ad2aaee606cd4dfdebc21b646def1","modified":1444206518000},{"_id":"themes/landscape/layout/_partial/post/title.ejs","shasum":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1444206518000},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","shasum":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1444206518000},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","shasum":"f26d30355ba9144c51e700e8edc6a4ab6144ff9a","modified":1444206518000},{"_id":"themes/landscape/layout/_widget/archive.ejs","shasum":"985fbeb01142b9d526cda8ebc372c1d361d69a6b","modified":1444206518000},{"_id":"themes/landscape/layout/_widget/category.ejs","shasum":"36ab37878129d152e3cbdeb839c08e52af1acd58","modified":1444206518000},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","shasum":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1444206518000},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","shasum":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1444206518000},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","shasum":"34dc8cdd96cdb41dd11cb7513f13714373e5104a","modified":1444206518000},{"_id":"themes/landscape/layout/archive.ejs","shasum":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1444206518000},{"_id":"themes/landscape/layout/_widget/tag.ejs","shasum":"b3f321ddda6be2702a286d5b11af9533509506fb","modified":1444206518000},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","shasum":"feba7c00fa59ba13bf870b358a499fde4473d335","modified":1444206518000},{"_id":"themes/landscape/layout/layout.ejs","shasum":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1444206518000},{"_id":"themes/landscape/layout/index.ejs","shasum":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1444206518000},{"_id":"themes/landscape/layout/category.ejs","shasum":"765426a9c8236828dc34759e604cc2c52292835a","modified":1444206518000},{"_id":"themes/landscape/layout/page.ejs","shasum":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1444206518000},{"_id":"themes/landscape/layout/tag.ejs","shasum":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1444206518000},{"_id":"themes/landscape/package.json","shasum":"85358dc34311c6662e841584e206a4679183943f","modified":1444206518000},{"_id":"themes/landscape/layout/post.ejs","shasum":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1444206518000},{"_id":"themes/landscape/scripts/fancybox.js","shasum":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1444206518000},{"_id":"themes/landscape/source/css/_partial/comment.styl","shasum":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1444206518000},{"_id":"themes/landscape/source/css/_partial/article.styl","shasum":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1444206518000},{"_id":"themes/landscape/source/css/_partial/archive.styl","shasum":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1444206518000},{"_id":"themes/landscape/source/css/_extend.styl","shasum":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1444206518000},{"_id":"themes/landscape/source/css/_partial/header.styl","shasum":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1444206518000},{"_id":"themes/landscape/source/css/_partial/highlight.styl","shasum":"36eefe6332b86b66023a9884b754d305235846b4","modified":1444206518000},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","shasum":"890349df5145abf46ce7712010c89237900b3713","modified":1444206518000},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","shasum":"bc5487b9a0bfe5f745423331824d3f3637ccd430","modified":1444206518000},{"_id":"themes/landscape/source/css/_partial/mobile.styl","shasum":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1444206518000},{"_id":"themes/landscape/source/css/_partial/footer.styl","shasum":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1444206518000},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","shasum":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1444206518000},{"_id":"themes/landscape/source/css/_variables.styl","shasum":"5e37a6571caf87149af83ac1cc0cdef99f117350","modified":1444206518000},{"_id":"themes/landscape/source/css/_util/mixin.styl","shasum":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1444206518000},{"_id":"themes/landscape/source/css/_util/grid.styl","shasum":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1444206518000},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","shasum":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1444206518000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","shasum":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1444206518000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","shasum":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1444206518000},{"_id":"themes/landscape/source/css/style.styl","shasum":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1444206518000},{"_id":"themes/landscape/source/fancybox/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1444206518000},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1444206518000},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1444206518000},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1444206518000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1444206518000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1444206518000},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1444206518000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1444206518000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1444206518000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","shasum":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1444206518000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","shasum":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1444206518000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","shasum":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1444206518000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","shasum":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1444206518000},{"_id":"themes/landscape/source/js/script.js","shasum":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1444206518000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","shasum":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1444206518000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","shasum":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1444206518000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","shasum":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1444206518000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","shasum":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1444206518000},{"_id":"themes/landscape/source/css/images/banner.jpg","shasum":"7bec01c1468dae4df1af787f17c65678de65fd85","modified":1444206518000},{"_id":"public/js/script.js","modified":1461807560105,"shasum":"2876e0b19ce557fca38d7c6f49ca55922ab666a1"},{"_id":"public/fancybox/jquery.fancybox.pack.js","modified":1461807560118,"shasum":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e"},{"_id":"public/fancybox/jquery.fancybox.js","modified":1461807560124,"shasum":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed"},{"_id":"public/fancybox/jquery.fancybox.css","modified":1461807560127,"shasum":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6"},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","modified":1461807560133,"shasum":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c"},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","modified":1461807560139,"shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f"},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","modified":1461807560149,"shasum":"294420f9ff20f4e3584d212b0c262a00a96ecdb3"},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","modified":1461807560154,"shasum":"dc3645529a4bf72983a39fa34c1eb9146e082019"},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","modified":1461807560157,"shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8"},{"_id":"public/fancybox/helpers/fancybox_buttons.png","modified":1461807560171,"shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3"},{"_id":"public/fancybox/fancybox_sprite@2x.png","modified":1461807560186,"shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8"},{"_id":"public/fancybox/fancybox_sprite.png","modified":1461807560191,"shasum":"17df19f97628e77be09c352bf27425faea248251"},{"_id":"public/fancybox/fancybox_overlay.png","modified":1461807560261,"shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0"},{"_id":"public/fancybox/fancybox_loading@2x.gif","modified":1461807560267,"shasum":"273b123496a42ba45c3416adb027cd99745058b0"},{"_id":"public/fancybox/fancybox_loading.gif","modified":1461807560325,"shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c"},{"_id":"public/fancybox/blank.gif","modified":1461807560336,"shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a"},{"_id":"public/css/style.css","modified":1461807564221,"shasum":"e9ae89d3eaf09b4fb3b48f3da5e58e74ea5875b0"},{"_id":"public/css/images/banner.jpg","modified":1461807565588,"shasum":"7bec01c1468dae4df1af787f17c65678de65fd85"},{"_id":"public/css/fonts/fontawesome-webfont.woff","modified":1461807565607,"shasum":"04c3bf56d87a0828935bd6b4aee859995f321693"},{"_id":"public/css/fonts/fontawesome-webfont.ttf","modified":1461807565654,"shasum":"7f09c97f333917034ad08fa7295e916c9f72fd3f"},{"_id":"public/css/fonts/fontawesome-webfont.svg","modified":1461807565761,"shasum":"46fcc0194d75a0ddac0a038aee41b23456784814"},{"_id":"public/css/fonts/fontawesome-webfont.eot","modified":1461807565771,"shasum":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e"},{"_id":"public/css/fonts/FontAwesome.otf","modified":1461807565787,"shasum":"b5b4f9be85f91f10799e87a083da1d050f842734"},{"_id":"public/aboutus/index.html","modified":1461807566015,"shasum":"c9c4d74d7277ba5f3f77e3a008e8089d4a8bbc8d"},{"_id":"public/2016/04/28/toughradius-native-install-video/index.html","modified":1461807566205,"shasum":"d338a194d4f9e2174150f544f5f2f9ec883dad94"},{"_id":"public/2016/04/26/ver210/index.html","modified":1461807566233,"shasum":"359f0b6217a56bcb76b8d36098ce5d3a96431cbb"},{"_id":"public/2016/03/09/ver205/index.html","modified":1461807566343,"shasum":"0b9096186bdbe4003292cf4d51e9a05f877c86bc"},{"_id":"public/2016/03/03/apiv1-release/index.html","modified":1461807566424,"shasum":"7b049310ac59ae0bce59873a7e849cdf89f53a89"},{"_id":"public/2016/02/19/ver202/index.html","modified":1461807566463,"shasum":"8b17ffb553123800a9fdb80c94e6d99f225e42f4"},{"_id":"public/2016/02/04/toughmysql-v0-0-1/index.html","modified":1461807566638,"shasum":"c007df8eb345b357b298e376841501fc10bbfbee"},{"_id":"public/2015/10/21/docker-mysql-create/index.html","modified":1461807566708,"shasum":"8581d88f031c683c16a5509367adaa93d2ebf957"},{"_id":"public/2015/10/19/linux-pptpd-to-toughradius/index.html","modified":1461807566774,"shasum":"51082af25e5e1530ad40c1a1cee30192629c4882"},{"_id":"public/2015/10/17/ver1202/index.html","modified":1461807566835,"shasum":"c51ca908c50cdd5dc3cbc60c1051e84ceaf909ef"},{"_id":"public/2015/10/17/mschapv2/index.html","modified":1461807566887,"shasum":"e7fb75684b6cd568d2a917d3517e368c062c1158"},{"_id":"public/2015/10/13/ver1201/index.html","modified":1461807566948,"shasum":"0ce53d00a5e6c35d6a0f4345804d3dd75ea3cb1a"},{"_id":"public/2015/10/07/intro/index.html","modified":1461807566985,"shasum":"5f4da87cd05a24db47807c2c8228f28f84fbeba9"},{"_id":"public/archives/index.html","modified":1461807567164,"shasum":"60b77b9b074e816b71c59a812ec0a79b7c456854"},{"_id":"public/archives/page/2/index.html","modified":1461807567305,"shasum":"6bd9c4cc27186ee11bfd87d8a307bd33c78019bf"},{"_id":"public/archives/2015/index.html","modified":1461807567343,"shasum":"c899260ffdbdcda93ead95bfe6f5754e33ae1026"},{"_id":"public/archives/2015/10/index.html","modified":1461807567547,"shasum":"3d16e0a351b3786502f0d6cd2be2f64998ea326f"},{"_id":"public/archives/2016/index.html","modified":1461807567611,"shasum":"4cc85d8ec2dd51c129736c7d86e9484343401e21"},{"_id":"public/archives/2016/02/index.html","modified":1461807567723,"shasum":"1e70d9c38ffdc0ebea389f1c219a67f49ec33f9a"},{"_id":"public/archives/2016/03/index.html","modified":1461807567752,"shasum":"75fda73da15a932640c84e3f087ebb8c260f1025"},{"_id":"public/archives/2016/04/index.html","modified":1461807567774,"shasum":"6d81eb42bd54843fd792eb1b8d26e216d5f567af"},{"_id":"public/CNAME","modified":1461807567781,"shasum":"d63e648a32f4ebe0322d38c029f384f92b60a3ed"},{"_id":"public/atom.xml","modified":1461807567786,"shasum":"5ae375811ea0eadfd00c703ff8ddb429b3fd2edf"},{"_id":"public/tags/release/index.html","modified":1461807567894,"shasum":"f05f6efbd0e7a92bbc9d01ad72bb5ac828e41901"},{"_id":"public/tags/toughradius/index.html","modified":1461807567935,"shasum":"11cfa2b4c864c8ae4d23505c23805d9eb92958f4"},{"_id":"public/tags/mysql/index.html","modified":1461807567982,"shasum":"3f1a87990a23e1823c6aa096c1e4720b3576236d"},{"_id":"public/tags/docker/index.html","modified":1461807567999,"shasum":"90ff0999885ea703771692ff993a0f1ceff39cdf"},{"_id":"public/tags/radius/index.html","modified":1461807568011,"shasum":"9e99efc1e9ef0a9e35a6b5cb62f8c0a035f8ee66"},{"_id":"public/tags/pptpd/index.html","modified":1461807568029,"shasum":"2e30dbb4902da422330fc7d74e8ea9ab2c17a487"},{"_id":"public/tags/vpn/index.html","modified":1461807568049,"shasum":"408cef6f0d65e234a7c0f3dbbce778f2c0bf9988"},{"_id":"public/index.html","modified":1461807568285,"shasum":"6eb9fa0abeeced5424e3e63a4bc2dae8037235e5"},{"_id":"public/page/2/index.html","modified":1461807568410,"shasum":"12066f586e687ca625a1ad57a540b28a405796e8"}],"Category":[],"Data":[],"Page":[{"title":"关于我们","date":"2015-10-07T09:35:03.000Z","_content":"\n## 关于 toughstruct\n\ntoughstruct是ToughRADIUS开发团队的代号，是我们对产品的理念。服务中小微ISP，让运营变的更简单，是我们的核心目标。\n\n## 公司网站\n\nhttp://www.toughstruct.com\n\n## 产品演示\n\n### ToughRADIUS\n\n- 主要端口\n\n认证端口：1812\n计费端口：1813\n管理端口：1816\n\n- 运营管理界面\n\n链接地址：http://radius.toughstruct.net:1816/ \n用户密码: admin/root\n\n\n\n\n\n","source":"aboutus/index.md","raw":"title: 关于我们\ndate: 2015-10-07 17:35:03\n---\n\n## 关于 toughstruct\n\ntoughstruct是ToughRADIUS开发团队的代号，是我们对产品的理念。服务中小微ISP，让运营变的更简单，是我们的核心目标。\n\n## 公司网站\n\nhttp://www.toughstruct.com\n\n## 产品演示\n\n### ToughRADIUS\n\n- 主要端口\n\n认证端口：1812\n计费端口：1813\n管理端口：1816\n\n- 运营管理界面\n\n链接地址：http://radius.toughstruct.net:1816/ \n用户密码: admin/root\n\n\n\n\n\n","updated":"2016-02-19T06:58:47.000Z","path":"aboutus/index.html","comments":1,"layout":"page","_id":"cinjmh2f90003o1qjimqo1bco"}],"Post":[{"title":"ToughRADIUS API v1 发布","date":"2016-03-03T04:18:51.000Z","_content":"\nToughRADIUS API v1 发布了。\n\nToughRADIUS API要解决的三个问题：\n\n- **业务功能扩展**：ToughRADIUS V2版本提供了一个精简的管理系统，但是对于一些客户比较复杂的业务需求会显得不够用，利用API可以实现业务功能的扩展，通过已有CRM等管理系统与ToughRADIUS实现对接。\n\n- **自助服务系统定制**：ToughRADIUS V2版本移除了自助服务模块，我们希望把这个模块提供給第三方来实现。\n\n- ** 移动终端APP开发**：对于ToughRADIUS V2版本，无论是管理，自服务都是可以扩展到移动终端的，通过API可以支持IOS，Android，微信公众号开发扩展。\n\n## 协议说明\n\n- 协议采用基于http的接口调用方式。\n- 消息发起方：第三方系统。\n- 消息接受方：TOUGHRADIUS系统。\n- 接口请求方法：HTTP GET 或者 POST，支持标准http1.1协议。\n- 消息报文编码：UTF-8，注意对参数进行 urlencode 编码\n- 接口鉴权：MD5签名，`md5(共享密钥+排序的参数值组合字符串)`,签名校验是双向的，消息接收方对请求消息进行签名验证，同时需对结果进行签名返回，消息发起方对响应结果的签名进行验证。\n- 当前接口版本：v1\n\n\n完整文档请访问：[《ToughRADIUS 接口文档》](http://docs.toughradius.net/toughradius_v2/api_docs.html)\n\n随着ToughRADIUS版本的更新完善，API接口内容也会持续完善。","source":"_posts/apiv1-release.md","raw":"title: ToughRADIUS API v1 发布\ndate: 2016-03-03 12:18:51\ntags: release\n---\n\nToughRADIUS API v1 发布了。\n\nToughRADIUS API要解决的三个问题：\n\n- **业务功能扩展**：ToughRADIUS V2版本提供了一个精简的管理系统，但是对于一些客户比较复杂的业务需求会显得不够用，利用API可以实现业务功能的扩展，通过已有CRM等管理系统与ToughRADIUS实现对接。\n\n- **自助服务系统定制**：ToughRADIUS V2版本移除了自助服务模块，我们希望把这个模块提供給第三方来实现。\n\n- ** 移动终端APP开发**：对于ToughRADIUS V2版本，无论是管理，自服务都是可以扩展到移动终端的，通过API可以支持IOS，Android，微信公众号开发扩展。\n\n## 协议说明\n\n- 协议采用基于http的接口调用方式。\n- 消息发起方：第三方系统。\n- 消息接受方：TOUGHRADIUS系统。\n- 接口请求方法：HTTP GET 或者 POST，支持标准http1.1协议。\n- 消息报文编码：UTF-8，注意对参数进行 urlencode 编码\n- 接口鉴权：MD5签名，`md5(共享密钥+排序的参数值组合字符串)`,签名校验是双向的，消息接收方对请求消息进行签名验证，同时需对结果进行签名返回，消息发起方对响应结果的签名进行验证。\n- 当前接口版本：v1\n\n\n完整文档请访问：[《ToughRADIUS 接口文档》](http://docs.toughradius.net/toughradius_v2/api_docs.html)\n\n随着ToughRADIUS版本的更新完善，API接口内容也会持续完善。","slug":"apiv1-release","published":1,"updated":"2016-03-03T04:24:33.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cinjmh2az0000o1qjb5846hww"},{"title":"ToughRADIUS V2.1.0 正式版发布，全新里程碑","date":"2016-04-26T14:26:05.000Z","_content":"\n\nToughRADIUS V2.1.0 正式版发布，全新里程碑\n\n这是自V1.2版本以后完全重构的全新版本，该版本完成了一期 API 的设计，修复前面版本的一些 bug。并大大提升性能。并且引入了全新的安装部署方式。\n\n## 版本变更\n\n- 完成一期规划的 API 接口。\n- 将数据库缓存与 session 管理替换为 redis。\n- 支持非 docker 模式的安装部署。\n- 优化 docker 构建。\n- 增加自有资费。\n- 修复大量 bug。\n- 改进系统性能。","source":"_posts/ver210.md","raw":"title: ToughRADIUS V2.1.0 正式版发布，全新里程碑\ndate: 2016-04-26 22:26:05\ntags: release\n---\n\n\nToughRADIUS V2.1.0 正式版发布，全新里程碑\n\n这是自V1.2版本以后完全重构的全新版本，该版本完成了一期 API 的设计，修复前面版本的一些 bug。并大大提升性能。并且引入了全新的安装部署方式。\n\n## 版本变更\n\n- 完成一期规划的 API 接口。\n- 将数据库缓存与 session 管理替换为 redis。\n- 支持非 docker 模式的安装部署。\n- 优化 docker 构建。\n- 增加自有资费。\n- 修复大量 bug。\n- 改进系统性能。","slug":"ver210","published":1,"updated":"2016-04-26T14:27:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cinjmh2ga0004o1qjnclkz4hv"},{"title":"ToughRADIUS V2.0.5 发布","date":"2016-03-09T07:47:58.000Z","_content":"\nToughRADIUS V2.0.5 发布。\n\n该版本对API进行了完善调整，后续版本会继续完善API。同时会组件改进客户技术支持方面，该版本已经支持用户反馈，提交反馈操作将会提交当前ToughRADIUS的版本信息以及部分日志信息到 toughstruct.com，如果你填写了有效的电子邮件地址，toughstruct.com 可能会就您的反馈报告与您联系，您提交的日志信息都将按照 toughstruct.com 的隐私政策受到保护，提交该反馈表示您同意 toughstruct.com 使用您提交的信息来改进 ToughRADIUS 的产品与服务。\n\n## 版本更新\n\n- 更新API，增加结果码状态定义。\n- 新增系统日志查询功能。\n- 新增用户反馈功能，支持在线提交反馈。\n- 新增客户授权码管理配置功能。\n- 新增加了一个“关于”信息页面。\n\n## 关于升级\n\n数据结构未改变，但有配置选项增加，建议重新安装实例。","source":"_posts/ver205.md","raw":"title: ToughRADIUS V2.0.5 发布\ndate: 2016-03-09 15:47:58\ntags: release\n---\n\nToughRADIUS V2.0.5 发布。\n\n该版本对API进行了完善调整，后续版本会继续完善API。同时会组件改进客户技术支持方面，该版本已经支持用户反馈，提交反馈操作将会提交当前ToughRADIUS的版本信息以及部分日志信息到 toughstruct.com，如果你填写了有效的电子邮件地址，toughstruct.com 可能会就您的反馈报告与您联系，您提交的日志信息都将按照 toughstruct.com 的隐私政策受到保护，提交该反馈表示您同意 toughstruct.com 使用您提交的信息来改进 ToughRADIUS 的产品与服务。\n\n## 版本更新\n\n- 更新API，增加结果码状态定义。\n- 新增系统日志查询功能。\n- 新增用户反馈功能，支持在线提交反馈。\n- 新增客户授权码管理配置功能。\n- 新增加了一个“关于”信息页面。\n\n## 关于升级\n\n数据结构未改变，但有配置选项增加，建议重新安装实例。","slug":"ver205","published":1,"updated":"2016-03-09T07:55:36.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cinjmh2gl0006o1qjmbhxx0wf"},{"title":"ToughRADIUS V2.0.2 发布","date":"2016-02-19T06:53:32.000Z","_content":"\n\nToughRADIUS V2.0.2 发布。\n\nToughRADIUS V2.x版本并不是 V1.x版本的简单延续，而是一次完全重构，一次打破兼容性的重构。\n\n在保留核心功能的基础上，砍掉了大部分可有可无的功能，比如砍掉自助服务模块是一个非常大的动作。\n\n在技术框架上进行了完全的重写，并采用pypy这个更快的基础支撑平台，对V1.x版本进行了大刀阔斧的改造，对安装配置操作进行了精简和优化。\n\n相关文档请参考：http://doc.toughradius.net\n\n\n## 版本变更说明：\n\n- 移除了独立的系统控制管理子系统，部分功能合并到主管理系统。\n- 移除了自助服务子系统。\n- 新增API模块，提供第三方通过API来实现自助服务，扩展管理的能力。\n- 移除客户经理管理模块。\n- 移除黑白名单管理模块。\n- 移除充值卡管理模块。\n- 移除工单管理模块。\n- 暂时移除了用户消息跟踪模块。\n- 修复了一些bug。\n- 系统监听的端口现在只有3个必须的：1816，1812，1813，其他的全部移除。\n\n## V2.x 版本路线\n\n- 完善一个精简稳定的版本。\n- 完善API，扩展第三方模块实现。\n\n## 温馨提示\n\n- 目前还不建议ToughRADIUS V2 版本投入生产环境使用。\n- 如果已经在生产环境使用的ToughRADIUS V1 版本够用，不用着急升级版本。\n- V2.x的安装配置操作相比V1.x版本发生了很大变换，更加精简，但需要适应。\n\n\n","source":"_posts/ver202.md","raw":"title: ToughRADIUS V2.0.2 发布\ndate: 2016-02-19 14:53:32\ntags: release\n---\n\n\nToughRADIUS V2.0.2 发布。\n\nToughRADIUS V2.x版本并不是 V1.x版本的简单延续，而是一次完全重构，一次打破兼容性的重构。\n\n在保留核心功能的基础上，砍掉了大部分可有可无的功能，比如砍掉自助服务模块是一个非常大的动作。\n\n在技术框架上进行了完全的重写，并采用pypy这个更快的基础支撑平台，对V1.x版本进行了大刀阔斧的改造，对安装配置操作进行了精简和优化。\n\n相关文档请参考：http://doc.toughradius.net\n\n\n## 版本变更说明：\n\n- 移除了独立的系统控制管理子系统，部分功能合并到主管理系统。\n- 移除了自助服务子系统。\n- 新增API模块，提供第三方通过API来实现自助服务，扩展管理的能力。\n- 移除客户经理管理模块。\n- 移除黑白名单管理模块。\n- 移除充值卡管理模块。\n- 移除工单管理模块。\n- 暂时移除了用户消息跟踪模块。\n- 修复了一些bug。\n- 系统监听的端口现在只有3个必须的：1816，1812，1813，其他的全部移除。\n\n## V2.x 版本路线\n\n- 完善一个精简稳定的版本。\n- 完善API，扩展第三方模块实现。\n\n## 温馨提示\n\n- 目前还不建议ToughRADIUS V2 版本投入生产环境使用。\n- 如果已经在生产环境使用的ToughRADIUS V1 版本够用，不用着急升级版本。\n- V2.x的安装配置操作相比V1.x版本发生了很大变换，更加精简，但需要适应。\n\n\n","slug":"ver202","published":1,"updated":"2016-02-19T06:56:15.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cinjmh2h80008o1qjrg5h9twc"},{"title":"ToughRADIUS V1.2.0.2 发布","date":"2015-10-17T07:22:51.000Z","_content":"\nToughRADIUS V1.2.0.2 发布。\n\n## 版本变更说明：\n\n- 修复了系统创建后，用户密码认证失效，全部放行的bug。\n- 修复了无法使用mschapv2认证的错误，支持mppe128位加密。\n- 删除了mschapv1的支持。\n\n## 升级指南\n\n可在系统控制管理界面里直接升级稳定版，无数据库结构变动，但建议还是要备份数据。\n\n如果界面升级失败，可在主机终端用以下指令升级：\n\n\tdocker exec trserver sh -c \"cd /opt/toughradius && git checkout stable && git pull origin stable && supervisorctl restart all\"\n\n> 注意 trserver是容器的名称，请该做你部署的容器名称。","source":"_posts/ver1202.md","raw":"title: ToughRADIUS V1.2.0.2 发布\ndate: 2015-10-17 15:22:51\ntags: release\n---\n\nToughRADIUS V1.2.0.2 发布。\n\n## 版本变更说明：\n\n- 修复了系统创建后，用户密码认证失效，全部放行的bug。\n- 修复了无法使用mschapv2认证的错误，支持mppe128位加密。\n- 删除了mschapv1的支持。\n\n## 升级指南\n\n可在系统控制管理界面里直接升级稳定版，无数据库结构变动，但建议还是要备份数据。\n\n如果界面升级失败，可在主机终端用以下指令升级：\n\n\tdocker exec trserver sh -c \"cd /opt/toughradius && git checkout stable && git pull origin stable && supervisorctl restart all\"\n\n> 注意 trserver是容器的名称，请该做你部署的容器名称。","slug":"ver1202","published":1,"updated":"2015-10-17T07:28:14.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cinjmh2hg000ao1qjpc8zce4z"},{"title":"ToughRADIUS V1.2.0.1 发布","date":"2015-10-13T06:54:34.000Z","_content":"\nToughRADIUS V1.2.0.1 发布，该版本没有数据库部分升级，在ToughRADIUS的控制面板，选择升级稳定版就可以切换了。\n\n# 版本变更说明：\n\n- 不再发布为Python标准安装包，ToughRADIUS在发布上将主要采用Docker镜像打包模式，这让我们更专注的解决问题，而不是制造各种问题。\n- 在发送强制下线消息时有一个打印日志的BUG被修复。\n- 清理了一些无用的逻辑代码。\n- 用户状态的改进，查询时根据用户过期日期查询，在显示时做额外的判断，修正了用户已过期还显示为正常的错误。\n- 充值卡续费的BUG修复。\n- 发送邮件模块的BUG修复。\n- 操作员cookie过期导致退出链接出错的BUG修复。\n- 更新Dockerfile构建脚本。\n\n感谢大家一如既往的支持，有问题请及时反馈。\n","source":"_posts/ver1201.md","raw":"title: ToughRADIUS V1.2.0.1 发布 \ndate: 2015-10-13 14:54:34\ntags: release\n---\n\nToughRADIUS V1.2.0.1 发布，该版本没有数据库部分升级，在ToughRADIUS的控制面板，选择升级稳定版就可以切换了。\n\n# 版本变更说明：\n\n- 不再发布为Python标准安装包，ToughRADIUS在发布上将主要采用Docker镜像打包模式，这让我们更专注的解决问题，而不是制造各种问题。\n- 在发送强制下线消息时有一个打印日志的BUG被修复。\n- 清理了一些无用的逻辑代码。\n- 用户状态的改进，查询时根据用户过期日期查询，在显示时做额外的判断，修正了用户已过期还显示为正常的错误。\n- 充值卡续费的BUG修复。\n- 发送邮件模块的BUG修复。\n- 操作员cookie过期导致退出链接出错的BUG修复。\n- 更新Dockerfile构建脚本。\n\n感谢大家一如既往的支持，有问题请及时反馈。\n","slug":"ver1201","published":1,"updated":"2015-10-15T06:58:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cinjmh2hp000co1qj10f9bhsp"},{"title":"ToughRADIUS (本地模式)安装配置视频教程","date":"2016-04-28T01:34:49.000Z","_content":"\nToughRADIUS (本地模式)安装配置视频教程, 对ToughRADIUS的安装流程有详细的讲解。\n\n<iframe height=498 width=510 src=\"http://player.youku.com/embed/XMTU0OTk2OTk4NA==\" frameborder=0 allowfullscreen></iframe>\n","source":"_posts/toughradius-native-install-video.md","raw":"title: ToughRADIUS (本地模式)安装配置视频教程\ndate: 2016-04-28 09:34:49\ntags: toughradius\n---\n\nToughRADIUS (本地模式)安装配置视频教程, 对ToughRADIUS的安装流程有详细的讲解。\n\n<iframe height=498 width=510 src=\"http://player.youku.com/embed/XMTU0OTk2OTk4NA==\" frameborder=0 allowfullscreen></iframe>\n","slug":"toughradius-native-install-video","published":1,"updated":"2016-04-28T01:38:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cinjmh2i1000eo1qj5h85u8d1"},{"title":"ToughMySQL，为ToughRADIUS提供数据库双机热备支持","date":"2016-02-03T18:39:38.000Z","_content":"\nToughMySQL是一个基于Docker技术的MySQL应用，一开始它就是为了ToughRADIUS提供一个简单可靠易用的数据库服务。\n\n现在 ToughMySQL发布了第一个正式的版本 v0.0.1\n\n## 功能特性：\n\n- 实现MySQL Docker容器部署。\n- 提供针对不同服务器配置环境的优化配置。\n- 提供一键脚本快速安装。\n- 提供备份脚本，支持7天以上备份自动删除。\n- 提供主从，互为主备的快速配置。\n\n## 快速指南\n\ntmshell是一个自动化安装和管理脚本，通过这个脚本，提供了很多有用的管理功能\n\n    $ wget https://github.com/talkincode/toughmysql/raw/master/tmshell -O /usr/local/bin/tmshell\n    $ chmod +x /usr/local/bin/tmshell\n    $ tmshell install\n\n直接输入 tmshell 可以看到支持的指令操作\n\n    usage: tmshell [OPTIONS] instance\n    \n        docker_setup                install docker, docker-compose\n        pull                        mysql docker images pull\n        install                     install default mysql instance\n        remove                      uninstall mysql instance\n        config                      mysql instance config edit\n        status                      mysql instance status\n        restart                     mysql instance restart\n        stop                        mysql instance stop\n        logs                        mysql instance logs\n        showmaster                  mysql instance show master status\n        showslave                   mysql instance show slave status\n        upmaster                    mysql instance update master sync config\n        backup                      mysql instance backup database\n        dsh                         mysql instance bash term\n    \n    All other options are passed to the tmshell program.\n\n### 完整的安装过程\n\n安装过程是一个交互式的过程，根据实际情况修改具体参数，注意如果打算以热备模式部署，需要输入server id\n\n    [root@i-jahnm3dt ~]# tmshell install\n    mysql user [raduser]:\n    mysql user password [radpwd]:\n    mysql database [radiusd]:\n    mysql root password [none]:\n    mysql replication password [replication]:\n    mysql port [3306]:\n    mysql server id [1,2...](default none): 1\n    mysql max memary [512M,1G,4G](default none):\n    \n    ToughMySQL instance config:\n    \n    instance name: mysql\n    mysql_user: raduser\n    mysql_password: radpwd\n    mysql_database: radiusd\n    mysql_root_password:\n    mysql_repl_password: replication\n    mysql_port: 3306\n    serverid: 1\n    mysql_max_mem:\n    \n    \n    database:\n        container_name: db_mysql\n        image: \"index.alauda.cn/toughstruct/mysql\"\n        privileged: true\n        ports:\n            -\"3306:3306\"\n        ulimits:\n            nproc: 65535\n            nofile:\n                soft: 20000\n                hard: 40000\n            environment:\n                - SERVERID=1\n                - MYSQL_MAX_MEM=\n                - MYSQL_USER=raduser\n                - MYSQL_PASSWORD=radpwd\n                - MYSQL_DATABASE=radiusd\n                - MYSQL_ROOT_PASSWORD=\n                - MYSQL_REPL_PASSWORD=replication\n        restart: always\n        volumes:\n            /home/toughrun/mysql/dbmysql:/var/lib/mysql\n            /home/toughrun/mysql/backup:/var/backup\n    \n    Creating db_mysql\n      Name          Command         State           Ports\n    ----------------------------------------------------------\n    db_mysql   /usr/local/bin/run   Up      0.0.0.0:3306->3306/tcp\n    \n\n在另一台服务器上按同样的步骤部署mysql实例，注意server id必须不一样\n\n> 具体过程略\n\n查看每一个实例的 master status \n\n服务器1：\n\n    [root@i-jahnm3dt ~]# tmshell showmaster\n    *************************** 1. row ***************************\n    File: mysql-bin.000002\n    Position: 107\n    Binlog_Do_DB:\n    Binlog_Ignore_DB: test,mysql\n    hosts:\n    172.17.0.1\n    10.61.105.29\n\n服务器2：\n\n    [root@i-jahnm3et ~]# tmshell showmaster\n    *************************** 1. row ***************************\n    File: mysql-bin.000002\n    Position: 107\n    Binlog_Do_DB:\n    Binlog_Ignore_DB: test,mysql\n    hosts:\n    172.17.0.1\n    10.60.128.105\n\n在服务器1上执行：\n\n    [root@i-jahnm3dt ~]# tmshell upmaster\n    MASTER_HOST: 10.60.128.105\n    MASTER_PORT (3306): \n    MASTER_REPL_PASSWORD (replication):\n    MASTER_LOG_FILE: mysql-bin.000002\n    MASTER_LOG_POS: 107\n\n在服务器2上执行：\n\n    [root@i-jahnm3et ~]# tmshell upmaster\n    MASTER_HOST: 10.61.105.29\n    MASTER_PORT (3306): \n    MASTER_REPL_PASSWORD (replication):\n    MASTER_LOG_FILE: mysql-bin.000002\n    MASTER_LOG_POS: 107\n\n最后检查每个服务器上的slave状态：\n\n    root@i-jahnm3dt ~]# tmshell showslave\n    *************************** 1. row ***************************\n      Slave_IO_State: Waiting for master to send event\n      Master_Host: 10.60.128.105\n      Master_User: repl\n      Master_Port: 3306\n      Connect_Retry: 60\n      Master_Log_File: mysql-bin.000002\n      Read_Master_Log_Pos: 107\n      Relay_Log_File: mysqld-relay-bin.000002\n      Relay_Log_Pos: 253\n      Relay_Master_Log_File: mysql-bin.000002\n      Slave_IO_Running: Yes\n      Slave_SQL_Running: Yes\n\n如果以下两项显示为：\n\n      Slave_IO_Running: Yes\n      Slave_SQL_Running: Yes\n\n说明我们的mysql互为主备的配置成功了。现在我们的两个MySQL节点都可以提供服务了，并且实时热备。\n\n","source":"_posts/toughmysql-v0-0-1.md","raw":"title: ToughMySQL，为ToughRADIUS提供数据库双机热备支持\ndate: 2016-02-04 02:39:38\ntags: [mysql,docker]\n---\n\nToughMySQL是一个基于Docker技术的MySQL应用，一开始它就是为了ToughRADIUS提供一个简单可靠易用的数据库服务。\n\n现在 ToughMySQL发布了第一个正式的版本 v0.0.1\n\n## 功能特性：\n\n- 实现MySQL Docker容器部署。\n- 提供针对不同服务器配置环境的优化配置。\n- 提供一键脚本快速安装。\n- 提供备份脚本，支持7天以上备份自动删除。\n- 提供主从，互为主备的快速配置。\n\n## 快速指南\n\ntmshell是一个自动化安装和管理脚本，通过这个脚本，提供了很多有用的管理功能\n\n    $ wget https://github.com/talkincode/toughmysql/raw/master/tmshell -O /usr/local/bin/tmshell\n    $ chmod +x /usr/local/bin/tmshell\n    $ tmshell install\n\n直接输入 tmshell 可以看到支持的指令操作\n\n    usage: tmshell [OPTIONS] instance\n    \n        docker_setup                install docker, docker-compose\n        pull                        mysql docker images pull\n        install                     install default mysql instance\n        remove                      uninstall mysql instance\n        config                      mysql instance config edit\n        status                      mysql instance status\n        restart                     mysql instance restart\n        stop                        mysql instance stop\n        logs                        mysql instance logs\n        showmaster                  mysql instance show master status\n        showslave                   mysql instance show slave status\n        upmaster                    mysql instance update master sync config\n        backup                      mysql instance backup database\n        dsh                         mysql instance bash term\n    \n    All other options are passed to the tmshell program.\n\n### 完整的安装过程\n\n安装过程是一个交互式的过程，根据实际情况修改具体参数，注意如果打算以热备模式部署，需要输入server id\n\n    [root@i-jahnm3dt ~]# tmshell install\n    mysql user [raduser]:\n    mysql user password [radpwd]:\n    mysql database [radiusd]:\n    mysql root password [none]:\n    mysql replication password [replication]:\n    mysql port [3306]:\n    mysql server id [1,2...](default none): 1\n    mysql max memary [512M,1G,4G](default none):\n    \n    ToughMySQL instance config:\n    \n    instance name: mysql\n    mysql_user: raduser\n    mysql_password: radpwd\n    mysql_database: radiusd\n    mysql_root_password:\n    mysql_repl_password: replication\n    mysql_port: 3306\n    serverid: 1\n    mysql_max_mem:\n    \n    \n    database:\n        container_name: db_mysql\n        image: \"index.alauda.cn/toughstruct/mysql\"\n        privileged: true\n        ports:\n            -\"3306:3306\"\n        ulimits:\n            nproc: 65535\n            nofile:\n                soft: 20000\n                hard: 40000\n            environment:\n                - SERVERID=1\n                - MYSQL_MAX_MEM=\n                - MYSQL_USER=raduser\n                - MYSQL_PASSWORD=radpwd\n                - MYSQL_DATABASE=radiusd\n                - MYSQL_ROOT_PASSWORD=\n                - MYSQL_REPL_PASSWORD=replication\n        restart: always\n        volumes:\n            /home/toughrun/mysql/dbmysql:/var/lib/mysql\n            /home/toughrun/mysql/backup:/var/backup\n    \n    Creating db_mysql\n      Name          Command         State           Ports\n    ----------------------------------------------------------\n    db_mysql   /usr/local/bin/run   Up      0.0.0.0:3306->3306/tcp\n    \n\n在另一台服务器上按同样的步骤部署mysql实例，注意server id必须不一样\n\n> 具体过程略\n\n查看每一个实例的 master status \n\n服务器1：\n\n    [root@i-jahnm3dt ~]# tmshell showmaster\n    *************************** 1. row ***************************\n    File: mysql-bin.000002\n    Position: 107\n    Binlog_Do_DB:\n    Binlog_Ignore_DB: test,mysql\n    hosts:\n    172.17.0.1\n    10.61.105.29\n\n服务器2：\n\n    [root@i-jahnm3et ~]# tmshell showmaster\n    *************************** 1. row ***************************\n    File: mysql-bin.000002\n    Position: 107\n    Binlog_Do_DB:\n    Binlog_Ignore_DB: test,mysql\n    hosts:\n    172.17.0.1\n    10.60.128.105\n\n在服务器1上执行：\n\n    [root@i-jahnm3dt ~]# tmshell upmaster\n    MASTER_HOST: 10.60.128.105\n    MASTER_PORT (3306): \n    MASTER_REPL_PASSWORD (replication):\n    MASTER_LOG_FILE: mysql-bin.000002\n    MASTER_LOG_POS: 107\n\n在服务器2上执行：\n\n    [root@i-jahnm3et ~]# tmshell upmaster\n    MASTER_HOST: 10.61.105.29\n    MASTER_PORT (3306): \n    MASTER_REPL_PASSWORD (replication):\n    MASTER_LOG_FILE: mysql-bin.000002\n    MASTER_LOG_POS: 107\n\n最后检查每个服务器上的slave状态：\n\n    root@i-jahnm3dt ~]# tmshell showslave\n    *************************** 1. row ***************************\n      Slave_IO_State: Waiting for master to send event\n      Master_Host: 10.60.128.105\n      Master_User: repl\n      Master_Port: 3306\n      Connect_Retry: 60\n      Master_Log_File: mysql-bin.000002\n      Read_Master_Log_Pos: 107\n      Relay_Log_File: mysqld-relay-bin.000002\n      Relay_Log_Pos: 253\n      Relay_Master_Log_File: mysql-bin.000002\n      Slave_IO_Running: Yes\n      Slave_SQL_Running: Yes\n\n如果以下两项显示为：\n\n      Slave_IO_Running: Yes\n      Slave_SQL_Running: Yes\n\n说明我们的mysql互为主备的配置成功了。现在我们的两个MySQL节点都可以提供服务了，并且实时热备。\n\n","slug":"toughmysql-v0-0-1","published":1,"updated":"2016-02-03T18:41:45.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cinjmh2ic000ho1qjh9oabek8"},{"title":"mschapv2在Radius中的认证实现","date":"2015-10-16T16:44:31.000Z","_content":"\n\n在Radius的认证请求AccessRequest包中如果包含 MS-CHAP2-Response 和 MS-CHAP-Challenge 属性则意味着需要实现ms-chap-v2认证。\n\n\n## 客户端 MS-CHAP2-Response 和 MS-CHAP-Challenge 生成的规则\n\n### MS-CHAP-Challenge \n\nMS-CHAP-Challenge  (AuthChallenge) 是客户端生成的随机16字节。\n\n### MS-CHAP2-Response \n\n随机生成16字节属性 PeerChallenge，连同AuthChallenge，UserName，Password作为输入参数，调用方法 GenerateNTResponse 得到 NtResponse.\n\n\tGenerateNTResponse(AuthChallenge, PeerChallenge, UserName, Password) \n\nGenerateNTResponse 方法的实现参考 [http://tools.ietf.org/html/rfc2759.html#section-8.1](http://tools.ietf.org/html/rfc2759.html#section-8.1)\n\n封装50字节的 MS-CHAP2-Response 属性：\n\n\t[0 : 2]           Flags  \\x00\\x00\n\t[2 : 18]          PeerChallenge \n\t[18 : 26]         Reserved \\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\n\t[26 : 50]         NtResponse\n\n\n## 服务端认证规则\n\n校验 MS-CHAP2-Response 长度，长度不等于50应该丢弃，并发送拒绝认证。\n\n从 MS-CHAP2-Response 提取 PeerChallenge，NtResponse\n\n\tNtResponse = MS-CHAP2-Response[26 : 50]\n\tPeerChallenge = MS-CHAP2-Response[2 : 18]\n\n调用 GenerateNTResponse 方法得到 MyNtResponse\n\n\tGenerateNTResponse(AuthChallenge, PeerChallenge, UserName, Password)  \n\n比较 MyNtResponse 与 NtResponse，不相等则验证失败。\n\n## Radius 认证响应\n\n调用 GenerateAuthenticatorResponse 方法得到 AuthenticatorResponse\n\n\tGenerateAuthenticatorResponse(\n\t\tPassword,\n\t\tNtResponse,\n\t\tPeerChallenge, \n\t\tAuthChallenge\n\t\tUserName\n\t) \n\nGenerateAuthenticatorResponse 方法的实现参考 [http://tools.ietf.org/html/rfc2759.html#section-8.7](http://tools.ietf.org/html/rfc2759.html#section-8.7)\n\n设置Radius响应消息属性  MS-CHAP2-Success  =  AuthenticatorResponse\n\n\n","source":"_posts/mschapv2.md","raw":"title: mschapv2在Radius中的认证实现\ndate: 2015-10-17 00:44:31\ntags: radius\n---\n\n\n在Radius的认证请求AccessRequest包中如果包含 MS-CHAP2-Response 和 MS-CHAP-Challenge 属性则意味着需要实现ms-chap-v2认证。\n\n\n## 客户端 MS-CHAP2-Response 和 MS-CHAP-Challenge 生成的规则\n\n### MS-CHAP-Challenge \n\nMS-CHAP-Challenge  (AuthChallenge) 是客户端生成的随机16字节。\n\n### MS-CHAP2-Response \n\n随机生成16字节属性 PeerChallenge，连同AuthChallenge，UserName，Password作为输入参数，调用方法 GenerateNTResponse 得到 NtResponse.\n\n\tGenerateNTResponse(AuthChallenge, PeerChallenge, UserName, Password) \n\nGenerateNTResponse 方法的实现参考 [http://tools.ietf.org/html/rfc2759.html#section-8.1](http://tools.ietf.org/html/rfc2759.html#section-8.1)\n\n封装50字节的 MS-CHAP2-Response 属性：\n\n\t[0 : 2]           Flags  \\x00\\x00\n\t[2 : 18]          PeerChallenge \n\t[18 : 26]         Reserved \\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\n\t[26 : 50]         NtResponse\n\n\n## 服务端认证规则\n\n校验 MS-CHAP2-Response 长度，长度不等于50应该丢弃，并发送拒绝认证。\n\n从 MS-CHAP2-Response 提取 PeerChallenge，NtResponse\n\n\tNtResponse = MS-CHAP2-Response[26 : 50]\n\tPeerChallenge = MS-CHAP2-Response[2 : 18]\n\n调用 GenerateNTResponse 方法得到 MyNtResponse\n\n\tGenerateNTResponse(AuthChallenge, PeerChallenge, UserName, Password)  \n\n比较 MyNtResponse 与 NtResponse，不相等则验证失败。\n\n## Radius 认证响应\n\n调用 GenerateAuthenticatorResponse 方法得到 AuthenticatorResponse\n\n\tGenerateAuthenticatorResponse(\n\t\tPassword,\n\t\tNtResponse,\n\t\tPeerChallenge, \n\t\tAuthChallenge\n\t\tUserName\n\t) \n\nGenerateAuthenticatorResponse 方法的实现参考 [http://tools.ietf.org/html/rfc2759.html#section-8.7](http://tools.ietf.org/html/rfc2759.html#section-8.7)\n\n设置Radius响应消息属性  MS-CHAP2-Success  =  AuthenticatorResponse\n\n\n","slug":"mschapv2","published":1,"updated":"2015-10-16T16:46:34.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cinjmh2iz000mo1qjhs9qqtog"},{"title":"Linux PPTP 对接 ToughRADIUS","date":"2015-10-19T02:25:32.000Z","_content":"\n以 ubuntu14 为例，谈谈PPTP对接ToughRADIUS\n\n### 安装pptpd服务\n\n\tsudo apt-get update -y\n\tsudo apt-get install -y pptpd iptables libfreeradius-client2 libfreeradius-client-dev\n\n如果/etc/radiusclient目录不存在，建立一个radius配置目录链接 \n\n\tln -s /usr/local/etc/radiusclient /etc/radiusclient\n\n\n### 配置pptpd与radius\n\n修改配置文件 /etc/pptpd.conf\n\n\toption /etc/ppp/pptpd-options\n\t#debug\n\t#stimeout 10\n\tlogwtmp\n\t#bcrelay eth1\n\t#delegate\n\t#connections 100\n\tlocalip 10.79.97.1\n\tremoteip 10.79.97.10-200\n\n修改配置文件 /etc/ppp/pptpd-options，注意这里采用了maschapv2认证方式，并采用mppe128位加密模式。\n\n\tname pptpd\n\trefuse-pap\n\trefuse-chap\n\trefuse-mschap\n\trequire-mschap-v2\n\trequire-mppe-128\n\n\t# Network and Routing\n\tms-dns 8.8.8.8\n\tms-dns 8.8.4.4\n\tproxyarp\n\tnodefaultroute\n\n\t#Logging\n\t#debug\n\t#dump\n\t#logfile /var/log/pptpd.log\n\n\t# Miscellaneous\n\tlock\n\tnobsdcomp\n\tnovj\n\tnovjccomp\n\t#nologfd\n\n\tplugin /usr/lib/pppd/2.4.5/radius.so\n\tplugin /usr/lib/pppd/2.4.5/radattr.so\n\tradius-config-file /etc/radiusclient/radiusclient.conf\n\n配置/etc/radiusclient/radiusclient.conf , 注意配置authserver，acctserver为你实际的radius服务器地址和端口。\n\n\tauth_order radius\n\tlogin_tries 4\n\tlogin_timeout 60\n\tnologin /etc/nologin\n\tauthserver radius.toughctruc.net:1812\n\tacctserver radius.toughctruc.net:1813\n\tservers /etc/radiusclient/servers\n\tdictionary /etc/radiusclient/dictionary\n\tseqfile /var/run/radius.seq\n\tmapfile /etc/radiusclient/port-id-map\n\tdefault_realm\n\tradius_timeout 10\n\tradius_retries 3\n\tlogin_local /bin/login\n\n如果 /etc/radiusclient/port-id-map 不存在，建立一个空文件\n\n\techo \"\" > /etc/radiusclient/port-id-map\n\n配置radius服务器和共享密钥 /etc/radiusclient/servers\n\n\tradius.toughstruct.net     testing123\n\n为了支持mschapv2认证，需要加入 dictionary.microsoft字典， 修改字典文件 /etc/radiusclient/dictionary，在末尾务必加上 ：\n\n\tINCLUDE /etc/radiusclient/dictionary.microsoft\n\n如果目录中没有这个字典，可以下载：[https://raw.githubusercontent.com/talkincode/ToughVPN/master/radius/dictionary/dictionary.microsoft](https://raw.githubusercontent.com/talkincode/ToughVPN/master/radius/dictionary/dictionary.microsoft)\n\n### 修改防火墙配置并修改内核转发支持\n\n注意IP地址与/etc/pptpd.conf中配置的一致\n\n\tiptables -t nat -A POSTROUTING -s 10.79.97.0/24 -o eth0 -j MASQUERADE\n\tiptables -A FORWARD -s 10.79.97.0/24 -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -j TCPMSS --set-mss 1356\n\n设置内核转发支持\n\n\tsysctl -w net.ipv4.ip_forward=1\n\n启动pptpd服务\n\n\tservice pptpd start \n\n### 配置ToughRADIUS\n\n在ToughRADIUS系统中，需要把PPTP作为接入设备加入，在BAS信息管理里增加一个标准配置即可。\n\n增加资费，新增用户信息，接下来就可以进行拨号测试了。\n\n在拨号过程中，可以通过用户消息跟踪或系统日志查看进行调试，使用mschapv2认证时，用户消息必定会有两个特定属性：MS-CHAP-Challenge 和 MS-CHAP2-Response，如果用户消息中没有此属性，则可能的原因是：\n\n- pptp服务没有配置require-mschap-v2  和 require-mppe-128\n- 系统内核不支持mppe\n- 没有加入dictionary.microsoft\n- 如果没有上面的问题，试着修改 require-mppe-128 为 require-mppe\n\n\n### 注意事项\n\n要支持mschapv2，需要系统内核支持MPPE，输入指令：\n\n\tmodprobe ppp-compress-18 && echo ok\n\n如果输出ok，则系统内核支持。\n\n在测试过程中，可以开启debug收集日志进行诊断，以及配合Radius服务器的日志进行诊断。\n\n更多帮助，请参考 [http://poptop.sourceforge.net/dox/](http://poptop.sourceforge.net/dox/)\n\n另外，你也可以关注我们的这个开源项目：[https://github.com/talkincode/ToughVPN  ](https://github.com/talkincode/ToughVPN)  ，这个项目计划实现更简单的一键安装以及常识Docker模式的部署。 ","source":"_posts/linux-pptpd-to-toughradius.md","raw":"title: Linux PPTP 对接 ToughRADIUS\ndate: 2015-10-19 10:25:32\ntags: [pptpd, vpn]\n---\n\n以 ubuntu14 为例，谈谈PPTP对接ToughRADIUS\n\n### 安装pptpd服务\n\n\tsudo apt-get update -y\n\tsudo apt-get install -y pptpd iptables libfreeradius-client2 libfreeradius-client-dev\n\n如果/etc/radiusclient目录不存在，建立一个radius配置目录链接 \n\n\tln -s /usr/local/etc/radiusclient /etc/radiusclient\n\n\n### 配置pptpd与radius\n\n修改配置文件 /etc/pptpd.conf\n\n\toption /etc/ppp/pptpd-options\n\t#debug\n\t#stimeout 10\n\tlogwtmp\n\t#bcrelay eth1\n\t#delegate\n\t#connections 100\n\tlocalip 10.79.97.1\n\tremoteip 10.79.97.10-200\n\n修改配置文件 /etc/ppp/pptpd-options，注意这里采用了maschapv2认证方式，并采用mppe128位加密模式。\n\n\tname pptpd\n\trefuse-pap\n\trefuse-chap\n\trefuse-mschap\n\trequire-mschap-v2\n\trequire-mppe-128\n\n\t# Network and Routing\n\tms-dns 8.8.8.8\n\tms-dns 8.8.4.4\n\tproxyarp\n\tnodefaultroute\n\n\t#Logging\n\t#debug\n\t#dump\n\t#logfile /var/log/pptpd.log\n\n\t# Miscellaneous\n\tlock\n\tnobsdcomp\n\tnovj\n\tnovjccomp\n\t#nologfd\n\n\tplugin /usr/lib/pppd/2.4.5/radius.so\n\tplugin /usr/lib/pppd/2.4.5/radattr.so\n\tradius-config-file /etc/radiusclient/radiusclient.conf\n\n配置/etc/radiusclient/radiusclient.conf , 注意配置authserver，acctserver为你实际的radius服务器地址和端口。\n\n\tauth_order radius\n\tlogin_tries 4\n\tlogin_timeout 60\n\tnologin /etc/nologin\n\tauthserver radius.toughctruc.net:1812\n\tacctserver radius.toughctruc.net:1813\n\tservers /etc/radiusclient/servers\n\tdictionary /etc/radiusclient/dictionary\n\tseqfile /var/run/radius.seq\n\tmapfile /etc/radiusclient/port-id-map\n\tdefault_realm\n\tradius_timeout 10\n\tradius_retries 3\n\tlogin_local /bin/login\n\n如果 /etc/radiusclient/port-id-map 不存在，建立一个空文件\n\n\techo \"\" > /etc/radiusclient/port-id-map\n\n配置radius服务器和共享密钥 /etc/radiusclient/servers\n\n\tradius.toughstruct.net     testing123\n\n为了支持mschapv2认证，需要加入 dictionary.microsoft字典， 修改字典文件 /etc/radiusclient/dictionary，在末尾务必加上 ：\n\n\tINCLUDE /etc/radiusclient/dictionary.microsoft\n\n如果目录中没有这个字典，可以下载：[https://raw.githubusercontent.com/talkincode/ToughVPN/master/radius/dictionary/dictionary.microsoft](https://raw.githubusercontent.com/talkincode/ToughVPN/master/radius/dictionary/dictionary.microsoft)\n\n### 修改防火墙配置并修改内核转发支持\n\n注意IP地址与/etc/pptpd.conf中配置的一致\n\n\tiptables -t nat -A POSTROUTING -s 10.79.97.0/24 -o eth0 -j MASQUERADE\n\tiptables -A FORWARD -s 10.79.97.0/24 -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -j TCPMSS --set-mss 1356\n\n设置内核转发支持\n\n\tsysctl -w net.ipv4.ip_forward=1\n\n启动pptpd服务\n\n\tservice pptpd start \n\n### 配置ToughRADIUS\n\n在ToughRADIUS系统中，需要把PPTP作为接入设备加入，在BAS信息管理里增加一个标准配置即可。\n\n增加资费，新增用户信息，接下来就可以进行拨号测试了。\n\n在拨号过程中，可以通过用户消息跟踪或系统日志查看进行调试，使用mschapv2认证时，用户消息必定会有两个特定属性：MS-CHAP-Challenge 和 MS-CHAP2-Response，如果用户消息中没有此属性，则可能的原因是：\n\n- pptp服务没有配置require-mschap-v2  和 require-mppe-128\n- 系统内核不支持mppe\n- 没有加入dictionary.microsoft\n- 如果没有上面的问题，试着修改 require-mppe-128 为 require-mppe\n\n\n### 注意事项\n\n要支持mschapv2，需要系统内核支持MPPE，输入指令：\n\n\tmodprobe ppp-compress-18 && echo ok\n\n如果输出ok，则系统内核支持。\n\n在测试过程中，可以开启debug收集日志进行诊断，以及配合Radius服务器的日志进行诊断。\n\n更多帮助，请参考 [http://poptop.sourceforge.net/dox/](http://poptop.sourceforge.net/dox/)\n\n另外，你也可以关注我们的这个开源项目：[https://github.com/talkincode/ToughVPN  ](https://github.com/talkincode/ToughVPN)  ，这个项目计划实现更简单的一键安装以及常识Docker模式的部署。 ","slug":"linux-pptpd-to-toughradius","published":1,"updated":"2015-10-19T02:29:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cinjmh2k0000po1qjufblo20x"},{"title":"服务中小微ISP，让运营变的更简单。","date":"2015-10-07T07:59:45.000Z","_content":"\nToughRADIUS是一个AAA应用软件，从创立之日起，他的宗旨就是服务于中小微ISP，让运营变得更简单。\n\nToughRADIUS支持标准RADIUS协议（RFC 2865, RFC 2866），提供完整的AAA实现。支持灵活的策略管理，支持各种主流接入设备并轻松扩展，具备丰富的计费策略支持。 \n\nToughRADIUS支持使用Oracle, MySQL, PostgreSQL, MSSQL等主流数据库存储用户数据，支持数据缓存，提供高性能的支持。 \n","source":"_posts/intro.md","raw":"title: 服务中小微ISP，让运营变的更简单。\ndate: 2015-10-07 15:59:45\n---\n\nToughRADIUS是一个AAA应用软件，从创立之日起，他的宗旨就是服务于中小微ISP，让运营变得更简单。\n\nToughRADIUS支持标准RADIUS协议（RFC 2865, RFC 2866），提供完整的AAA实现。支持灵活的策略管理，支持各种主流接入设备并轻松扩展，具备丰富的计费策略支持。 \n\nToughRADIUS支持使用Oracle, MySQL, PostgreSQL, MSSQL等主流数据库存储用户数据，支持数据缓存，提供高性能的支持。 \n","slug":"intro","published":1,"updated":"2015-10-07T08:28:38.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cinjmh2kg000uo1qj6ug6ulzg"},{"title":"通过Docker镜像为ToughRADIUS部署Mysql","date":"2015-10-21T15:47:26.000Z","_content":"\n注意：本文提到的方法已经不适用于最新的版本，请参考最新的[ToughMySQL实现：](http://blog.toughradius.org/2016/02/04/toughmysql-v0-0-1/)\n\nToughRADIUS默认采用了SQLite存储数据，通常这足够运营上千的用户量了，不过当系统对数据的可管理性，系统的性能有更高的要求时，我们建议采用MySQL数据库来替换。\n\n最近不少朋友反应数据库出现锁死的状况，主要是由于并发过高，SQLite采用的文件锁导致了其他数据库事务失败。\n\n在ToughRADIUS发布的Docker镜像中，已经内置了MySQL的驱动，因此我们要做的仅仅是对数据库的配置。\n\n强烈推荐使用Docker镜像来部署Mysql，更加简单方便。\n\n最好采用主机文件映射的方式来管理数据文件，这里创建一个文件夹来存放mysql数据文件\n\n    $ mkdir -p /home/var/lib/mysql  \n\n创建一个Mysql容器实例并自动创建一个数据库\n\n    $ docker run --name mysql -d -p 3306:3306 \\ \n        -v /home/var/lib/mysql:/var/lib/mysql \\\n        -e MYSQL_USER=tradmin \\\n        -e MYSQL_PASSWORD=trradiusd \\\n        -e MYSQL_DATABASE=toughradius \\\n        -e MYSQL_ROOT_PASSWORD=myroot talkincode/docker-mysql\n        \n你还可以选择优化配置的Docker镜像,下面是创建一个支持4G以上内存，CPU 4核以上的配置，加上标签M4即可\n\n    $ docker run --name mysql -d -p 3306:3306 \\ \n        -v /home/var/lib/mysql:/var/lib/mysql \\\n        -e MYSQL_USER=tradmin \\\n        -e MYSQL_PASSWORD=trradiusd \\\n        -e MYSQL_DATABASE=toughradius \\\n        -e MYSQL_ROOT_PASSWORD=myroot talkincode/docker-mysql:M4\n\n另外还提供了一个支持内存1G的配置，使用标签M1即可\n\n    $ docker run --name mysql -d -p 3306:3306 \\ \n        -v /home/var/lib/mysql:/var/lib/mysql \\\n        -e MYSQL_USER=tradmin \\\n        -e MYSQL_PASSWORD=trradiusd \\\n        -e MYSQL_DATABASE=toughradius \\\n        -e MYSQL_ROOT_PASSWORD=myroot talkincode/docker-mysql:M1\n\n\n>   `MYSQL_ROOT_PASSWORD`: root用户密码\n>   `MYSQL_DATABASE`: 自动创建一个数据库\n>   `MYSQL_USER`: 随数据库创建一个用户\n>   `MYSQL_PASSWORD`: 新建用户的密码\n\n\n### 备份数据库\n\n如果是首次安装，可略过，如果是迁移数据库，则务必进行备份。\n\n### 创建数据库\n\n通过MySQL客户端执行以下语句，请自行修改相关用户密码信息。如果已经使用Docker镜像自动创建数据库，则忽略。\n\n\tcreate database toughradius DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci; \n\tGRANT ALL ON toughradius.* TO tradmin@‘%' IDENTIFIED BY ‘trradiusd' WITH GRANT OPTION; \n\tFLUSH PRIVILEGES; \n\n### 配置ToughRADIUS\n\n进入ToughRADIUS的系统管理控制台，打开数据库配置界面。设置MySQl数据库类型，并填写mysql数据库连接描述。注意数据库名称，用户名，密码对应。\n\n\tmysql://tradmin:trradiusd@192.168.1.10/toughradius?charset=utf8\n\n![mysql config](https://cloud.githubusercontent.com/assets/377938/10863358/b4e30a14-8005-11e5-8e06-b4ff066842d1.png)\n\n\n### 初始化MySQL数据库\n\n完成创建和配置后，进入下一步的初始化过程，首先进入控制面板，重启所有服务，以保证所有服务都能加载最新配置。\n\n点击初始化数据库按钮，完成数据库的初始化。\n\n### 恢复数据\n\n进入数据备份管理界面，恢复之前备份的数据，如果是首次安装则可忽略。\n","source":"_posts/docker-mysql-create.md","raw":"title: 通过Docker镜像为ToughRADIUS部署Mysql\ndate: 2015-10-21 23:47:26\ntags: [mysql,docker]\n---\n\n注意：本文提到的方法已经不适用于最新的版本，请参考最新的[ToughMySQL实现：](http://blog.toughradius.org/2016/02/04/toughmysql-v0-0-1/)\n\nToughRADIUS默认采用了SQLite存储数据，通常这足够运营上千的用户量了，不过当系统对数据的可管理性，系统的性能有更高的要求时，我们建议采用MySQL数据库来替换。\n\n最近不少朋友反应数据库出现锁死的状况，主要是由于并发过高，SQLite采用的文件锁导致了其他数据库事务失败。\n\n在ToughRADIUS发布的Docker镜像中，已经内置了MySQL的驱动，因此我们要做的仅仅是对数据库的配置。\n\n强烈推荐使用Docker镜像来部署Mysql，更加简单方便。\n\n最好采用主机文件映射的方式来管理数据文件，这里创建一个文件夹来存放mysql数据文件\n\n    $ mkdir -p /home/var/lib/mysql  \n\n创建一个Mysql容器实例并自动创建一个数据库\n\n    $ docker run --name mysql -d -p 3306:3306 \\ \n        -v /home/var/lib/mysql:/var/lib/mysql \\\n        -e MYSQL_USER=tradmin \\\n        -e MYSQL_PASSWORD=trradiusd \\\n        -e MYSQL_DATABASE=toughradius \\\n        -e MYSQL_ROOT_PASSWORD=myroot talkincode/docker-mysql\n        \n你还可以选择优化配置的Docker镜像,下面是创建一个支持4G以上内存，CPU 4核以上的配置，加上标签M4即可\n\n    $ docker run --name mysql -d -p 3306:3306 \\ \n        -v /home/var/lib/mysql:/var/lib/mysql \\\n        -e MYSQL_USER=tradmin \\\n        -e MYSQL_PASSWORD=trradiusd \\\n        -e MYSQL_DATABASE=toughradius \\\n        -e MYSQL_ROOT_PASSWORD=myroot talkincode/docker-mysql:M4\n\n另外还提供了一个支持内存1G的配置，使用标签M1即可\n\n    $ docker run --name mysql -d -p 3306:3306 \\ \n        -v /home/var/lib/mysql:/var/lib/mysql \\\n        -e MYSQL_USER=tradmin \\\n        -e MYSQL_PASSWORD=trradiusd \\\n        -e MYSQL_DATABASE=toughradius \\\n        -e MYSQL_ROOT_PASSWORD=myroot talkincode/docker-mysql:M1\n\n\n>   `MYSQL_ROOT_PASSWORD`: root用户密码\n>   `MYSQL_DATABASE`: 自动创建一个数据库\n>   `MYSQL_USER`: 随数据库创建一个用户\n>   `MYSQL_PASSWORD`: 新建用户的密码\n\n\n### 备份数据库\n\n如果是首次安装，可略过，如果是迁移数据库，则务必进行备份。\n\n### 创建数据库\n\n通过MySQL客户端执行以下语句，请自行修改相关用户密码信息。如果已经使用Docker镜像自动创建数据库，则忽略。\n\n\tcreate database toughradius DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci; \n\tGRANT ALL ON toughradius.* TO tradmin@‘%' IDENTIFIED BY ‘trradiusd' WITH GRANT OPTION; \n\tFLUSH PRIVILEGES; \n\n### 配置ToughRADIUS\n\n进入ToughRADIUS的系统管理控制台，打开数据库配置界面。设置MySQl数据库类型，并填写mysql数据库连接描述。注意数据库名称，用户名，密码对应。\n\n\tmysql://tradmin:trradiusd@192.168.1.10/toughradius?charset=utf8\n\n![mysql config](https://cloud.githubusercontent.com/assets/377938/10863358/b4e30a14-8005-11e5-8e06-b4ff066842d1.png)\n\n\n### 初始化MySQL数据库\n\n完成创建和配置后，进入下一步的初始化过程，首先进入控制面板，重启所有服务，以保证所有服务都能加载最新配置。\n\n点击初始化数据库按钮，完成数据库的初始化。\n\n### 恢复数据\n\n进入数据备份管理界面，恢复之前备份的数据，如果是首次安装则可忽略。\n","slug":"docker-mysql-create","published":1,"updated":"2016-02-03T19:05:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cinjmh2km000vo1qjiftbimh5"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cinjmh2az0000o1qjb5846hww","tag_id":"cinjmh2d10001o1qj0j8vcgc8","_id":"cinjmh2da0002o1qj7wqelok4"},{"post_id":"cinjmh2ga0004o1qjnclkz4hv","tag_id":"cinjmh2d10001o1qj0j8vcgc8","_id":"cinjmh2gh0005o1qjqhdb3a4f"},{"post_id":"cinjmh2gl0006o1qjmbhxx0wf","tag_id":"cinjmh2d10001o1qj0j8vcgc8","_id":"cinjmh2h30007o1qj29h60d1j"},{"post_id":"cinjmh2h80008o1qjrg5h9twc","tag_id":"cinjmh2d10001o1qj0j8vcgc8","_id":"cinjmh2hd0009o1qjrjzyptal"},{"post_id":"cinjmh2hg000ao1qjpc8zce4z","tag_id":"cinjmh2d10001o1qj0j8vcgc8","_id":"cinjmh2hi000bo1qjgn8n0l7j"},{"post_id":"cinjmh2hp000co1qj10f9bhsp","tag_id":"cinjmh2d10001o1qj0j8vcgc8","_id":"cinjmh2hs000do1qj493mgpye"},{"post_id":"cinjmh2i1000eo1qj5h85u8d1","tag_id":"cinjmh2i3000fo1qje3zrnt0t","_id":"cinjmh2i8000go1qjhy6cr4vc"},{"post_id":"cinjmh2ic000ho1qjh9oabek8","tag_id":"cinjmh2ii000io1qjsnawr2wi","_id":"cinjmh2ik000ko1qj9164ua5p"},{"post_id":"cinjmh2ic000ho1qjh9oabek8","tag_id":"cinjmh2ij000jo1qjohhhi5d3","_id":"cinjmh2ik000lo1qjsj1iy8wk"},{"post_id":"cinjmh2iz000mo1qjhs9qqtog","tag_id":"cinjmh2jg000no1qjnwoxghxo","_id":"cinjmh2jk000oo1qjdpgvmapn"},{"post_id":"cinjmh2k0000po1qjufblo20x","tag_id":"cinjmh2k3000qo1qjro4o3nfk","_id":"cinjmh2kb000so1qja5scgv3w"},{"post_id":"cinjmh2k0000po1qjufblo20x","tag_id":"cinjmh2k6000ro1qj9ztt87us","_id":"cinjmh2kc000to1qjyydrj1cg"},{"post_id":"cinjmh2km000vo1qjiftbimh5","tag_id":"cinjmh2ii000io1qjsnawr2wi","_id":"cinjmh2kp000wo1qjdx6idks9"},{"post_id":"cinjmh2km000vo1qjiftbimh5","tag_id":"cinjmh2ij000jo1qjohhhi5d3","_id":"cinjmh2kr000xo1qjinjiell6"}],"Tag":[{"name":"release","_id":"cinjmh2d10001o1qj0j8vcgc8"},{"name":"toughradius","_id":"cinjmh2i3000fo1qje3zrnt0t"},{"name":"mysql","_id":"cinjmh2ii000io1qjsnawr2wi"},{"name":"docker","_id":"cinjmh2ij000jo1qjohhhi5d3"},{"name":"radius","_id":"cinjmh2jg000no1qjnwoxghxo"},{"name":"pptpd","_id":"cinjmh2k3000qo1qjro4o3nfk"},{"name":"vpn","_id":"cinjmh2k6000ro1qj9ztt87us"}]}}